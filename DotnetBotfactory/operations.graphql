query GetConfiguration {
  configuration {
    id
    projectName
    outputPath
    minimalWorkingExample
    dotnetVersion
    provideApi
    language
    copybots {
      name
      inputDirectory
      whitelist
      fieldDefinitions {
        needle
        fieldName
        variants
      }
    }
  }
}

query ReadTextFileWithVersion($textFilePath: String! $fileVersion: FileVersion) {
  readTextFile(textFilePath: $textFilePath fileVersion: $fileVersion)
}

query GetSchema($botFilePath: String!) {
  botSchema(botFilePath: $botFilePath)
  botSpec(botFilePath: $botFilePath) {
    consumedSchemaPath
    excludeConfigurationFromConsumedSchema
    providedSchemaPath
  }
}

query ParseGraphQLSchemaAndOperations($graphql: [AdditionalFileInput!]!) {
  graphQL(additionalFiles: $graphql) {
    objectTypes {
      name
      interfaces
      fields {
        name
        parameters {
          name
          type {
            text
          }
        }
        type {
          text
        }
      }
    }
    inputObjectTypes {
      name
      fields {
        name
        type {
          text
        }
      }
    }
    interfaceTypes {
      name
      fields {
        name
        parameters {
          name
          type {
            text
          }
        }
        type {
          text
        }
      }
    }
    enumerations {
      name
      values {
        name
      }
    }
    fragments {
      name
      text
      typeCondition
      variables {
        name
        type {
          text
        }
      }
      denestedSelections {
        depth
        item {
          fieldSelection {
            name
            alias
          }
          fragmentSpreadSelection {
            fragmentName
          }
          inlineFragmentSelection {
            typeName
          }
        }
      }
    }
    operations {
      name
      operationType
      text
      variables {
        name
        type {
          text
        }
      }
      denestedSelections {
        depth
        item {
          fieldSelection {
            name
            alias
          }
          fragmentSpreadSelection {
            fragmentName
          }
          inlineFragmentSelection {
            typeName
          }
        }
      }
    }
  }
}

query Test($graphql: [AdditionalFileInput!]!) {
  graphQL(additionalFiles: $graphql) {
    fragments {
      denestedSelections {
        ...DenestedSelections
      }
    }
    operations {
      denestedSelections {
        ...DenestedSelections
      }
    }
  }
}

query GetCaret($caretId: String!) {
  caret(caretId: $caretId) {
    string
  }
}

fragment DenestedSelections on DenestedOfSelectionItem {
  depth
  item {
    selection {
      text
      __typename
      ...on GraphQLFieldSelection {
        name
        alias
      }
      ...on GraphQLFragmentSpreadSelection {
        fragmentName
      }
      ...on GraphQLInlineFragmentSelection {
        typeName
      }
    }
  }
}